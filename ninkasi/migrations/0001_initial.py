# Generated by Django 5.0 on 2024-03-28 13:48

import django.db.models.deletion
import ninkasi.models.fields
import ninkasi.models.phase
import ninkasi.models.style
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('volume', models.SmallIntegerField(verbose_name='Volume')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'abstract': False,
                'swappable': 'RECIPE_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nr', models.CharField(max_length=100, unique=True, verbose_name='Nr')),
            ],
            options={
                'verbose_name_plural': 'Batches',
                'ordering': ['nr'],
            },
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('volume', models.FloatField()),
                ('ttype', models.SmallIntegerField(choices=[(0, 'Fermentation'), (1, 'BBT'), (2, 'Lagering')], default=0, verbose_name='Type')),
            ],
            options={
                'verbose_name_plural': 'Tanks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Brewhouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('volume', models.FloatField()),
                ('warmup', models.SmallIntegerField(blank=True, help_text='Time in minutes needed for 1 degree C warmup', null=True, verbose_name='Warmup time per degree C')),
            ],
            options={
                'verbose_name_plural': 'Brewhouses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('synonyms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Synonyms')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('category', models.ManyToManyField(blank=True, to='ninkasi.category')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('definition', models.TextField(verbose_name='Definition')),
            ],
            options={
                'verbose_name_plural': 'Phases',
                'ordering': ['name'],
            },
            bases=(models.Model, ninkasi.models.phase.BasePhase),
        ),
        migrations.CreateModel(
            name='RecipeStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='Temperature')),
                ('duration', ninkasi.models.fields.DurationField(max_length=10, verbose_name='Duration')),
                ('order', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('priority', models.SmallIntegerField(choices=[(1, 'High'), (3, 'Medium'), (5, 'Low')], default=3)),
                ('date', models.DateField()),
                ('time', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField()),
                ('color', ninkasi.models.style.IntRangeField(max_length=10, verbose_name='Color')),
                ('source', models.CharField(max_length=50, verbose_name='Source')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('abbreviation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Abbreviation')),
            ],
            options={
                'verbose_name_plural': 'Units',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BatchPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.batch')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ninkasi.phase')),
            ],
            options={
                'verbose_name_plural': 'Phases',
                'ordering': ['phase__name'],
            },
            bases=(models.Model, ninkasi.models.phase.BasePhase),
        ),
        migrations.CreateModel(
            name='BBT',
            fields=[
                ('tank_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ninkasi.tank')),
            ],
            options={
                'verbose_name_plural': 'BBTs',
            },
            bases=('ninkasi.tank',),
        ),
        migrations.CreateModel(
            name='CCT',
            fields=[
                ('tank_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ninkasi.tank')),
            ],
            options={
                'verbose_name_plural': 'CCTs',
            },
            bases=('ninkasi.tank',),
        ),
        migrations.CreateModel(
            name='LagerTank',
            fields=[
                ('tank_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ninkasi.tank')),
            ],
            options={
                'verbose_name_plural': 'Lager tanks',
            },
            bases=('ninkasi.tank',),
        ),
        migrations.CreateModel(
            name='BatchContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('volume', models.FloatField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.batch')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.tank')),
            ],
        ),
        migrations.AddField(
            model_name='batch',
            name='tank',
            field=models.ManyToManyField(through='ninkasi.BatchContainer', to='ninkasi.tank'),
        ),
        migrations.CreateModel(
            name='Beer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField()),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.RECIPE_MODEL)),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.style')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='beer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.beer'),
        ),
        migrations.CreateModel(
            name='Brew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Time')),
                ('volume_projected', models.FloatField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.batch')),
                ('brewhouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.brewhouse')),
            ],
            options={
                'verbose_name_plural': 'Brews',
                'ordering': ['batch__nr', 'date'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ninkasi.material')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=('ninkasi.material',),
        ),
        migrations.CreateModel(
            name='BrewMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('batchnr', models.CharField(max_length=100, verbose_name='Batch Nr')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.brew')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.material')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.unit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='brew',
            name='material',
            field=models.ManyToManyField(through='ninkasi.BrewMaterial', to='ninkasi.material'),
        ),
        migrations.CreateModel(
            name='BatchMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('batchnr', models.CharField(max_length=100, verbose_name='Batch Nr')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.batch')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.material')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.unit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='material',
            field=models.ManyToManyField(through='ninkasi.BatchMaterial', to='ninkasi.material'),
        ),
        migrations.CreateModel(
            name='BatchStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='Temperature')),
                ('duration', ninkasi.models.fields.DurationField(max_length=10, verbose_name='Duration')),
                ('order', models.SmallIntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End time')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.batchphase')),
                ('recipe_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ninkasi.recipestep')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(verbose_name='Time')),
                ('notes', models.CharField(blank=True, max_length=200, null=True, verbose_name='Notes')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.SmallIntegerField(choices=[(0, 'Acidity'), (1, 'DO'), (2, 'Gravity'), (3, 'CO2'), (4, 'FAN')], verbose_name='Quantity')),
                ('unit', models.SmallIntegerField(choices=[(0, 'Ph'), (1, 'PPM'), (2, 'SG')], verbose_name='Unit')),
                ('value', models.FloatField(verbose_name='Value')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.sample')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(verbose_name='Date (actual)')),
                ('end_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Date to')),
                ('volume', models.SmallIntegerField(blank=True, null=True, verbose_name='Volume')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.tank')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('addition_time', models.FloatField(blank=True, null=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.RECIPE_MODEL)),
                ('addition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ninkasi.recipestep')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.unit')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ninkasi.ingredient')),
            ],
        ),
    ]
